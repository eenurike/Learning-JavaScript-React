'use strict';

console.log('arr' + ' - object');
// arr - object, Конкатинация строк(сложение строк)
console.log(4 + ' - object');
// 4 - object, Если сложим число и строку, то получим строку
console.log(4 + +' - object');
// NaN, Не математическая операция, так как если перед строкой поставить оператор +, то JS строку изменит на число(Динамическая типизация)
console.log(4 + '6');
// 46, Просто сложили две строки
console.log(4 + +'6'); 
// 10, Поменяли строку на число, и получили математическую операцию, так как пославили перед строкой унарный плюс. Унарный плюс - называется плюс который ставится перед каким-то аргументом, унарный потому что используется всего один аргумент для своей работы, в нашем случае он использует один аргумент числа 6

// Оператор инкримента и декримента
// Они существуют для укорочения нашего кода, и соответственно увеличивают или уменьшают значение на единичку. И довольно частый вопрос на собеседованиях "чем отличается префиксная форма от постфиксной формой"

let incr = 10,
    decr = 10;

incr++; // Оператор инкремента, увеличение на один (постфиксная форма)
decr--; // Оператор декримента, уменьшение на один  (постфиксная форма)

console.log(incr);  // 11
console.log(decr);  // 9

incr = 10;
decr = 10;

++incr; // Префиксная форма
--decr; // Постфиксная форма

console.log(incr);  // 11
console.log(decr);  // 9
// В таких примерах мы конечно не увидим в чем их разница

incr = 10;
decr = 10;

console.log(incr++); // 10
console.log(decr--); // 10

// Числа не изменились, дело в том что когда мы используем инкримент или декримент в постфиксной форме прямо сразу(то есть мы сразу же в console.log изменили и вывели) то есть сразу взяли результат этого оператора, а не операцию инкримента и декримента записали отдельно и отдельно потом вывели переменную. А тут нам сперва возвращается(выводится) старое значение, а потом оператор начинает увеличивать или уменьшать, но число ведь уже вывелось 10, а потом произошла операция инкремента и декримента
console.log(incr); // 11
console.log(decr); // 9
// Тут наглядно видим что в переменную сохранилось уже измененное значение 

incr = 10;
decr = 10;

console.log(++incr); // 11
console.log(--decr); // 9
// А вот тут видим, сперва произошла операция инкремента и декримента а потом число 10 начало меняться, и уже измененное число вывелось