'use strict';

alert('Hello');
// И видим что у нас выскакивает небольшое модальное окошко в котором написан тот текст который мы в него передали, и мы должны понимать что это модальное окно оно встроенно в браузер и к сожалению мы его никак не можем застилизовать и для каждого браузера оно будет выглядеть по разному, то же самое и для двух команд которые мы разберем дальше. Вообще команда alert используется чтоб предупредить пользователя о чем-то важном, но будем говорить честно описанные в этом уроке возможности используются довольно таки редко в таких больших комплексных проектах. Для этого у нас конечно будет написан интерфейс который будет написан на HTML, но все равно мы должны знать эти команды, это самая база JS

const result = confirm('Are you here?');
// Задаем пользователю вопрос, на который получаем ответ в виде ДА/НЕТ, то-есть тип данных BOOLEAN
console.log(result); 

let answer = prompt('How old are you?');
// Тут уже мы ждем конкретный ответ от пользователя
console.log(answer);
console.log(typeof(answer));
// Важное уточнение что вводит в строку пользователь это все STRING, хотя мы ввели цифры
// Проверили это с помощью оператора typeof

answer = prompt('How old are you?', '18');
// Вторые ковычки нужны для дефолтного ответа, или оставлять их пустыми для internet explorera

// ВАЖНО!!! Вся информация которая приходит от пользователя будет ввиде строк, вне зависимости от того как мы ее получили: с confirm, prompt или с какогото элемента на странице

answer = +prompt('How old are you?', '18');
console.log(answer);
console.log(typeof(answer));
// Но если перед prompt поставить + то меня меняем тип данных на NUMBER, это динамическая типизация что дальше по курсу

// Поиграемся с массивами, ответы от пользователя будем записывать в массив

const answers = [];

answers[0] = prompt(`What's your name?`, '');
answers[1] = +prompt(`How old are you?`, '');
answers[2] = confirm('Are you happy?');

// Хотелось бы эти ответы увидеть на странице, одно из первых команд которая существовала в JS это document.write() В реальных проектах она практически не используется, так как она все содержимое сайта заменяет на то что мы хотим вывести. Это прям такая совсем тестовая команда, которая в реальных проектах не используется
document.write(answers);

// И такие модальные окна, они существуют только внутри браузера, то есть если попытатсья вывести такие конструкции через Run Code получим ошибку, потому-что консоль в VSCode совершенно не знать что такое prompt, alert, confirm, document, window 
