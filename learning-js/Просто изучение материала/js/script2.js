'use strict';

// ТИПЫ ДАННЫХ


// Числа (number) 
let number = 6;             // целые числа 
let number2 = 6.32;         // дробные числа
console.log(4 / 0);         // Infinity (бесконечность)
console.log(-4 / 0);        // -Infinity
console.log(5 * "five");    // NaN (Not a Number - не число) 



// Строки (string) 

/* Строки записываются в ковычках, есть три вида ковычек " ' `, последние ковычки
    это бэктики `, с ними познакомимся чуть позже */
const person = "Nurike";
let person2 = 'Nur';
let person3 = `Nursultan`;
let numberString = `5`;      // число 5 будет строкой, потомучто в ковычках



// Логический тип данных (boolean)
let bool = true;
let notBool = false;



// Специфические типы данных
console.log(something);  

/* вызвали переменную которой не существует, в консоле получили ошибку
    (something is not defined), и такой тип данных называется null */

let und;
console.log(und);

/* создали переменную но в нее ничего не положили, она пустая, и в консоле
    нет ошибки, но видим undefined, такой тип данных называется undefined */



// Обьекты
let obj = {                 // например опишем обьект человека
    name: "Nurike",          // свойство name, значение Nurike
    age: 30,
    isMarried: false
};

/* Это обьект, он в себе может содержать, данные которые называются 
    свойствами обьекта, и действия которые называются методами. С 
    методами, то есть функциями познакомимся позже */

console.log(obj.name);      // обращаемся к свойству name через точку
console.log(obj["age"]);    // обращаемся к свойсту age через []

/* Обьекты это ключивая единица в Javascript, где мы будем хранить очень
    много информации */

let arr = [1, "apple.jpg", true, {name:"nurike"}, []];     
/* Это массив, не является отдельным типом данных, это другая 
    разновидность обьекта. В массиве мы храним данные которые идут по порядку */
console.log(arr[0]);        // => 1
console.log(arr[1]);        // => apple.jpg
console.log(arr[2]);        // => true
console.log(arr[3]);        // => {object}
console.log(arr[4]);        // => [] пустой массив
/* Каждый элемент массива имеет свой порядкойвый номер, и начиется он с 0 */        



