'use strict';

// Простое взаимодействие с пользователем

alert("Hello");

/* 
Конечно в реальных проектах нужно создавать свои стилизованные модальные окна,
а так для практики можно использовать
*/

let result = confirm("Are you here?");      // дайют пользователю ответить да/нет
console.log(result);        // => true    

let answer = prompt("Вам есть 18?", "18");  
console.log(answer);        // что пользователь напишет, что и будет в переменной
/*
второй аргумент это дефолтный ответ, можно и без него, и что бы не ввел
пользователь, в переменную попадет тип данных строка!
*/

console.log(typeof(answer));        // => string
/*
Вся информация которая приходит от пользователя, это все строки!!!
Не зависимо как мы получили эти данные
*/

answer = +prompt("Вам есть 18?", "18");
console.log(typeof(answer));        // => number   
/* С динамической типизацией познакомимся дальше, как на ходу менять данные */  


// Задание: передать в массив, ответы пользователя, и вывести на страницу

let answers = [];
answers[0] = prompt("Как вас зовут?");
answers[1] = prompt("Как ваша фамилия?");
answers[2] = prompt("Сколько вам лет?");
/* Таким образом можно передать значения в массив */

document.write(answers);
/*
document.write на проектах не используется, так как он перезаписывает всю страницу,
а для каких то тестов пойдет
*/


//Интерполяция

let category = "toys";
console.log("https://someurl.com/" + category);     // URL адрес в категорию toys 
/*
Все бы ничего с использованием конкатинаций, но а если строка начнет разростаться
*/
console.log("https://someurl.com/" + category + "/" + "4");      // категория toys 4 каталог
/*
Не очень удобно и локонично
*/
console.log(`https"//someurl.com/${category}/4`);       // Так намного удобнее

let user = "Nurike";
alert(`Привет меня зовут ${user}, и мне ${20 + 10} лет`);



