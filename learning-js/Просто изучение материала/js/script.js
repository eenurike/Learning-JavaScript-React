"use strict"; //Обозначает что используем строгий формат, например

// a = 30;
// console.log(a);

/*
Сразу выдаст ошибку, так как переменная "a" не обьявлена с помощь let или const, а без use strict
    такой бы фокус сработал, и это правильное поведение кода!!!
И это только один пример
*/


//ПЕРЕМЕННЫЕ

let number = 10;
const leftBorderWidth = 1;

console.log(number);
number = 20;
console.log(number);

//leftBorderWidth = 50;
//console.log(leftBorderWidth);

/*
Const - это константа, ее нельзя перезаписать выдаст ошибку
    (поэтому я эту 10-11 строку кода и за коментировал, ниже код 
        не работает из-за этой ошибки)
*/


let obj = {
    name: "Nurike"
};
console.log(obj.name);

/*
Но константа в JavaScript это не константа, таким образом константу 
    можно перезаписать (в примере с обьектом который выше)
*/

console.log(car);
var car = "bmw";

// console.log(car);
// let car = "bmw";

/*
Отличие var от let, заключается в том что var имеет поведение как hoisting (всплытие).
То-есть var существует еще до того как она была обьявлена в коде.
В примере 30-31, мы получаем результат undefined, то есть переменная есть, но
    она пустая, и код работает дальше.
Но с let такая штука не пройдет, сразу выдаст ошибку
*/

{
    var result = 22;
}
console.log(result);

// {
//     let result = 22;
// }
// console.log(result);

{
    let result = 22;
    console.log(22);
}

/*
Область видимости переменных.
Переменная обьявленая с помощью var между фигурными скобками
    (цикл,функция и т.д.), она видна везде!!!
А let сразу выдает ошибку, так как она видна только внутри 
    фигурных скобок
*/