'use strict';

// ЦИКЛЫ

/*
Все программы созданы для автоматизации процессов, циклы заменяют 
однотипные человеческие действия. Вместо того чтоб писать одни и теже команды, 
мы заменяем это небольшим циклом, который сделает это все за нас
*/

// Есть 3 типа циклов



// 1: Пока наше условие правдиво, наш цикл будет работать

let num = 50;           // Всегда нужна начальная точка отчета 

while(num <= 55) {       // Пока наше условие правдиво, наш цикл будет выполнятся console.log num
    console.log(num);
/*
Если оставить в таком виде, то наш цикл будет бесконечным, так как наше условие всегда верно
*/
    num++;      // Наш цикл будет выполняться до того момента, как цифра увеличится до 55
}


// 2: Сперва выполнет цикл, а только потом проверит условие, и если необходимо выйти из цикла

do {
    console.log(num);
    num++;
}
while(num < 10);

/*
=> 50
Видим что унас условие не правдиво, но цикл отрабоет одну итерацию
*/


// 3: И самый популярный цикл for. Потомучто его можно весьма подробно настроить

let num2 = 100;

for (let i = 1; i < 8; i++) {      // Наш цикл проходит 7 итераций, так как у нас увеличивается i
    console.log(num2);
    num2++;                        // num2 будет увеличиваться 7 раз,потомучто наш цикл идет от i
}

/*
Первый аргумент это с чего цикл начинается
Второй аргумент это условие при котором наш цикл остановится
Третий аргумент это шаг цикла, что будет происходить каждый раз в новым цикле,
чаще всего используется конструкция с инкрементом (++),
типа в каждой итерации i будет увеличиваться на 1
*/

// Если нужно прервать цикл на какойто конкретной итерации

for (let i = 1; i <= 10; i++) {
    if (i === 5) {
        break;
    }

    console.log(i);     // И видим что на 4 итерации i остановился, цикл тоже прервался
}

// Если нужно пропустить какую-то итерацию

for (let i = 1; i <= 10; i++) {
    if (i === 5) {
        continue;
    }

    console.log(i);     // И видим что пропущена 5-ая итерация, но цикл идет дальше
}

/*
Не надо путать циклы, с методами переборов for each, for of и т.д.
*/

