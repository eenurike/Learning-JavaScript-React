// К логическим операторам относится логическое ИЛИ И и оператор отрицания НЕ, нужно понять что все операторы нам что-то возвращают, то есть дают какой-то результат. Представим реальную ситуацию, вы хотите купить автомобиль, но денег только на покупку одной машины, вы приходите в салоны и сталкивайтесь с выбором, есть модель А и есть модель Б, так как денег на обе машины вам не хватит, то вы выбираете или вариант А или вариант Б, но как результат у вас будет новая машина, вы все равно ее купите. Тоже самое можно применить и к оператору И, вам понравились обе машины и денег вам хватает на все, как результат вы подучили обе машины. И когда будем говорить про возвращаемое значение и как раз подразумевается какойто результат, ведь мы любые операторы применяем с какйо-то целью, увеличить число на 5, разделить число на 10 и получить какой-то результат

// Логический оператор И &&, и оно возвращает правду, если все аргументы верны
// Например ты голоден и хочешь купить картошку фри и гамбургер, если оба блюда есть в наличии И гамбургер И фри, то вы вополните свою задачу, вы будете сыты
let hamburger = true,
      fries = true;

if (hamburger && fries) {
  console.log('Я сыт!');
}      
// Я сыт!, Наше условие выполнилось так как оба условия выполнились. Тоесть при помощи логического оператора И, мы проверяем два сразу условия. Как итог заметь (hamburger && fries) тут мы получили полностью правдивый результат, то есть это условие нам вернуло правду, и поэтому выполнилось действие Я сыт!
console.log((hamburger && fries)); // true, Это все выражение которое было в скобках и он вернул просто логический тип данных true
// Запомни что результат логических операций это какой-то логическое булевое значение

hamburger = true;
fries = false;

if (hamburger && fries) {
  console.log('Я сыт!');
} 
// в консоле ничего не вывелось, потомучто условие не выполнилось, а у нас нет блока else и код просто идет дальше. Получается так что вы сможете сьесть только одно блюдо, но вместе с картошкой не сможете этого сделать, и условие которое мы проверяем нам вернуло false

console.log((hamburger && fries)); // false

// Это такое базовое применение, когда мы четко видим что обо аргумента которые здесь испольщуются они как бы сразу в логическом типе true/false, но так бывает далеко не всегда 

hamburger = 5; // Гамбургеров осталось 5
fries = 0; // Картошка фри вся закончилась

if (hamburger && fries) {
  console.log('Я сыт!');
} 
// Так же условие не выполнилось, так как 0 это всегда false, а любые числа это true, тут мы подходим к такой теме как динамическая типизация, по этой теме будет отдельный большой урок, но пока нужно понять что в JS типы данных могут переходить один в другой, строка может стать числом, число может стать строкой и что угодно может стать логическим значением
// Пример из реальной практики, например хочешь посмотреть какой-то фильм на пиратском сайте, и там обычно нужно посмотреть несколько реклам, то есть мы модем сделать условие видео не разблокируется до тех пор, пока пользователь не досмотрел рекламу 1 и рекламу 2, и опять буддет использоваться этот оператор И в условие
// В JS есть 5 сущностей которые будут всегда false 0, ''(' ' это не false, так как это не пустая строка, там есть пробел), null, undefined, NaN. А все остальное всегда будет true