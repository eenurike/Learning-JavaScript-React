const personalPlanPeter = {
    name: "Peter",
    age: "29",
    skills: {
        languages: ['ru', 'eng'],
        programmingLangs: {
            js: '20%',
            php: '10%'
        },
        exp: '1 month'
    }
};

1) Напишите функцию showExperience, которая будет принимать в себя объект со всеми данными и возвращать строку с опытом.
Пример:

showExperience(personalPlanPeter) => '1 month'

P.S. желательно использовать деструктуризацию, но не обязательно


const showExperience = function(plan) {
  const {exp} = plan.skills;
  return exp;
};

console.log(showExperience(personalPlanPeter));

2) Напишите функцию showProgrammingLangs, которая будет принимать в себя объект со всеми данными и возвращать строку в нужном виде.

Пример:

showProgrammingLangs(personalPlanPeter)  =>

"Язык js изучен на 20% Язык php изучен на 10%"

Причем функция должна работать вне зависимости от количества языков. Если ни один не указан, то возвращается пустая строка.

P.S. Для переноса строки используется \n в конце строки.

function showProgrammingLangs(plan) {
  let str = "";
  const {programmingLangs} = plan.skills;
  if (Object.keys(programmingLangs).length === 0) {\
    // Проверка на пустой обьект
    console.log('isEmpty');
  } else {
    for (let i in programmingLangs) {
      str += `Язык ${i} изучен на ${programmingLangs[i]}\n`;
      // Смотри если записать просто =, то возвратиться просто последняя итерация(у нас там строка), а если += то будет возвращаться каждая итерация(строки). А \n это перенос в конце строки на каждую итерацию 
    }
  }

  return str;
}

console.log(showProgrammingLangs(personalPlanPeter));
