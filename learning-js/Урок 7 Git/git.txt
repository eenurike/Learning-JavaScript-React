Прежде всегго нужно сказать чтоб git следил за какойто папкой
-> git init (инициируй этот репозиторий)

и увидим в папке как скрытая папка появился .git это и есть наш репозиторий
Затем нужно прописать конфигурации, можно прописать глобально или локально. Глобально значит имя и email будет указан на весь компьютер, а локально конфигурации будут распространяться чисто на конкретную папку
-> git config --local user.name "John"
-> git config --local user.email "example@gmail.com"

Чтоб убедится заходим в папку с проектом и в скрытую папку .git, и видим файл config, заходим туда, и видим что наши данные записались
[user]
	name = John
	email = example@gmail.com

А если нужно глобально
-> git config --global user.name "bla"

Вообще у git репозитория есть три состояния файлов
1. Когда файлы просто созданы - создал index.html и этот файл просто лежит в проекте и ничего с ним не происходит
2. Когда git следит за определенными файлами, когда такое происходит они попадают в так называемый индекс
3. Когда git создал такую определенную точку, в которую вы когда-то сможете вернутся, какие были изменения, как работал проект на данной точке и т.д. оно подругому еще называется commit

Если нужно посмотреть какой статус репозитория
-> git status
Видим что пока нет комитов, и файлы красные, то есть git пока не следит за этими файлами

Чтобы перенести файлы в так называемый индекс
-> git add -A (-A это все файлы, ALL)

Проверим 
-> git status
Тепербь видим что файлы стали зелеными

Теперь добавим новый файл test.css и проверим
-> git status

Видим сразу комбинацию двух состояний, файлы за которыми следит git(зеленым цветом), и файл test.css красным цветом, то что он только что был создан и над ним еще не проводилось еще никаких операций, чтобы заново добавить test.css
-> git add test.css М
ожно опять воспользоваться -A, а можно напрямую написать test.css или *.css, тогда мы возьмем все файлы которые имеют расширение .css

-> git status 
Видим что test.css тоже стал зеленого цвета

Пришло время все эти файлы перевести в третье состояние, в так называемый commit
-> git commit -a -m"first commit"
-a это все файлы
-m это message описание комита, которые мы сейчас делаем
Теперь у нас создана контрольная точка, как будто мы скопировали еще одну папку и теперь можем работать не боясь за то что все старые изменения которые когдато были, которые когда-то понадобятся, они куда-то удалятся

-> git status
Мы ничего не увидим
