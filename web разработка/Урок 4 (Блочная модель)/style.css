/*
Блочная модель часть 1
Просто к сведению, повторяющиеся свойства перезаписываются!
Для примера я подряд одни и теже свойства прописываю, в реальности
так не делается) 
*/

h2 {
    color: brown;
    font-size: 30px;
}

div a {
    text-decoration: none;
    font-size: 20px;
    font-weight: bold;
    color: lightgreen;
}

.chapter {
    color: green;
}

#begin {
    color: orange;
}


#begin {
    color: orange;
    color: 	#556B2F;
    color: rgb(0, 0, 129);
    color: 	rgba(255,20,147,0.5);
    font-weight: bold;
    text-transform: uppercase;
}

h2 {
    text-align: center;
    font-style: italic; 
    text-decoration: underline; 
    text-decoration: line-through; 
    font-size: 30px; 
}

.text { 
    font-weight: bold;
    color: white;
    background-color: black;
    padding: 2px 4px;
    border-radius: 7px;
}

.box {
    width: 300px;
    height: 300px;
    background-color: rgb(26, 182, 182);
    /*
    Внутрение отступы
    */
    padding: 20px;
    /*
    Каждую сторону можно настроить
    */
    padding-top: 20px;
    padding-right: 10px;
    padding-bottom: 15px;
    padding-left: 25px;
    /*
    Или сокращенный вариант, по часовой стрелки, начиная с верху
    */
    padding: 20px 10px 15px 25px;

    /*
    Границы
    Толщина границы
    */
    border-width: 3px;
    /*
    Стиль этой границы
    solid - прямая линия
    dashed - пунктирная линия
    dotted - точки
    */
    border-style: solid;
    /*
    Цвет границы
    */
    border-color: grey;
    /*
    Сокращенный вариант
    */
    border: 3px solid black;

    /*
    Внешние отступы, так же как и с padding
    */
    margin: 20px;
}

/*
Блочная модель часть 2
Сущесвтвуют 3 вида поведений блоков на странице, на самом деле их больше(flex,gird)
но базовых 3
1) Блочные элементы - это главный каркас нашей страницы,
они очень жадные, то есть если даже задать определенную ширину блоку,
то невидимая часть блока все равно займет все пространство, не позволяя
другим блоком залазить на ее територию. Блочные элементы имеют 
все свойства: сам контент(ширина и высота), border, padding, margin. 
Есть один нюанс, нашим div прописали width: 300px; но в панели разработчика
при наведении на этот блок который в HTML структуре, показывает 341px,
это потому что он учитывает фактическую ширину с margin, padding, border.
Чтоб наш блок не учитывал эти ширины
*/
.box {
    box-sizing: border-box;
    /*
    А стандартное поведение это content-box
    */
}
/*
Это свойство используется всегда, тогда лучше задать сразу
всем элементам данное свойство
*/
* {
    box-sizing: border-box;
}

/*
2) Строчные элементы нужны для наполнения сайта
Теперь наши блоки нужно чем то заполнить. Такие как ссылки,
в нашей структуре видим в одном блоке ссылка и картинка. 
Но эти два элемента в консоле разработчика в разделе
Computed после styles справа, видим display: inline;
это и есть строчные элементы, и они занимают столько 
сколько в них контента. Так как эти два элемента
встали в один ряд с друг другом(так как они не жадные), а не как с 
блочными элементами один под другим. Но тут тоже есть один нюанс
*/
a {
    border: 1px solid black;
    padding: 20px;
    margin: 20px;
    /*
    Новодим на элемент в панели разработчика и видим что
    margin только добавился слева и справа, а сверху и снизу
    отступов нет
    */
    width: 500px;
    /*
    Видим в консоле разработчика что свойство ширины добавилось,
    но наш элемент визульно не поменялся, строчные элементы не
    имеют ширины! так как они рстягиваются от контента внутри
    */
}

/*
Какие элементы строчные а какие блочные смотри в документации, 
но можно вручную менять эти поведения
*/
a {
    display: block;
    /*
    Видим что свойство width приминилось, так как элемент стал блочным,
    а его сущность занимает всю страницу, так же есть значения 
    inline - строчный
    inline-block - строчно блочный
    flex - дальше по курсу
    grid - дальше по курсу
    */
}

/*
3) Строчно блочные элементы, это свойство взяло все самое лучшее
из блочного и строчного поведения
*/
.box {
    display: inline-block;
    /*
    И видим, наши блоки встали в один ряд, и имеют ширину 
    горизонтальные margin. То есть от блочного поведения элементы
    взяли все свойства что прописали им (width, margin left и right), 
    а отстрочного поведения, взяли то что элементы стоят в одном ряду,
    и не имеют жадность(не захватывают все пространство)
    */
}

/*
Центрирование элементов
*/
img {
    display: block;
    width: 500px;
    margin: 0 auto;
    /*
    По вертикали отступов нет, а по горизонтали будет оталкивать автоматически
    чтоб элемент встал по центру, работает только с блочными элементами, по
    вертикали выровнить не получится!
    */
}
